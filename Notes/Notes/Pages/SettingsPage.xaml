<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:resources="clr-namespace:Notes.Resources"
             xmlns:controls="clr-namespace:Notes.Controls"
             xmlns:vm="clr-namespace:Notes.ViewModels"
             xmlns:ac="clr-namespace:Notes.AccentColors"
             x:DataType="vm:SettingsPageViewModel"
             mc:Ignorable="d"
             x:Class="Notes.Pages.SettingsPage"
             Title="Settings">
    <ContentPage.Resources>
        <ResourceDictionary>
            
            <ControlTemplate x:Key="RadioCircleControlTemplate">
                <Grid Margin="4" WidthRequest="30" HeightRequest="30">
                    <Button x:Name="BackgroundButton"
                            BackgroundColor="{TemplateBinding BorderColor}"
                            BorderWidth="0"
                            CornerRadius="15"
                            />
                    <Label x:Name="CheckLabel"
                           FontSize="18"
                           TextColor="{TemplateBinding TextColor}"
                           FontFamily="{StaticResource FontFamily_MaterialDesignIconic}"
                           Text="{StaticResource IconGlyph_Check}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           />
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroupList>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter TargetName="CheckLabel" Property="Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <VisualState.Setters>
                                        <Setter TargetName="CheckLabel" Property="Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
            </ControlTemplate>

            <Style x:Key="DividerStyle" TargetType="BoxView">
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="HorizontalOptions" Value="Fill" />
                <Setter Property="HeightRequest" Value="1" />
                <Setter Property="Color" Value="{DynamicResource SecondaryContentTextColor}" />
            </Style>

            <Style TargetType="RadioButton">
                <Setter Property="ControlTemplate" Value="{StaticResource RadioCircleControlTemplate}" />
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout Margin="10">
            <Grid>
                <!--ColumnDefinitions="*, Auto" RowDefinitions="40"-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Label Text="{x:Static resources:AppResources.Settings_DarkThemeSwitch_Title}" 
                       Grid.Column="0" 
                       VerticalTextAlignment="Center" 
                       TextColor="{DynamicResource PrimaryContentTextColor}"/>
                <Switch x:Name="ThemeSwitch"
                        Grid.Column="1" IsToggled="{Binding IsDarkTheme, Mode=TwoWay}"/>
            </Grid>
            
            <BoxView Style="{StaticResource DividerStyle}" />

            <StackLayout RadioButtonGroup.GroupName="ColorRadioButtons" RadioButtonGroup.SelectedValue="{Binding AccentColor, Mode=TwoWay}" Orientation="Vertical" Margin="0,5,0,5">
                
                <Label Text="{x:Static resources:AppResources.Settings_AccentColorSelector_Title}" 
                       TextColor="{DynamicResource PrimaryContentTextColor}"/>

                <StackLayout Orientation="Horizontal">
                    <RadioButton Value="{x:Static ac:AppAccentColor.Red}" TextColor="White" BorderColor="{DynamicResource RedAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Pink}" TextColor="White" BorderColor="{DynamicResource PinkAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Purple}" TextColor="White" BorderColor="{DynamicResource PurpleAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.DeepPurple}" TextColor="White" BorderColor="{DynamicResource DeepPurpleAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Indigo}" TextColor="White" BorderColor="{DynamicResource IndigoAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Blue}" TextColor="White" BorderColor="{DynamicResource BlueAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.LightBlue}" TextColor="White" BorderColor="{DynamicResource LightBlueAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Cyan}" TextColor="White" BorderColor="{DynamicResource CyanAccentColor}"/>
                </StackLayout>
                <StackLayout Orientation="Horizontal">
                    <RadioButton Value="{x:Static ac:AppAccentColor.Teal}" TextColor="White" BorderColor="{DynamicResource TealAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Green}" TextColor="White" BorderColor="{DynamicResource GreenAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.LightGreen}" TextColor="White" BorderColor="{DynamicResource LightGreenAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Lime}" TextColor="White" BorderColor="{DynamicResource LimeAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Yellow}" TextColor="White" BorderColor="{DynamicResource YellowAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Amber}" TextColor="White" BorderColor="{DynamicResource AmberAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.Orange}" TextColor="White" BorderColor="{DynamicResource OrangeAccentColor}"/>
                    <RadioButton Value="{x:Static ac:AppAccentColor.DeepOrange}" TextColor="White" BorderColor="{DynamicResource DeepOrangeAccentColor}"/>
                </StackLayout>
                
            </StackLayout>

            <BoxView Style="{StaticResource DividerStyle}" />
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Label Text="{x:Static resources:AppResources.Settings_SpellCheckEnabled_Title}" 
                               Grid.Column="0" 
                               VerticalTextAlignment="Center" 
                               TextColor="{DynamicResource PrimaryContentTextColor}"/>
                <Switch x:Name="SpellCheckSwitch" 
                                Grid.Column="1"
                                IsToggled="{Binding IsSpellCheckEnabled, Mode=TwoWay}"/>
            </Grid>

            <BoxView Style="{StaticResource DividerStyle}" />


            <Label Text="{x:Static resources:AppResources.Settings_LocalBackup_Title}" 
                   Margin="0,5,0,0"
                   TextColor="{DynamicResource PrimaryContentTextColor}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button x:Name="CreateBackupButton" 
                        Text="{x:Static resources:AppResources.Settings_CreateLocalBackup_Button}" 
                        Command="{Binding CreateBackupCommand}"
                        Grid.Column="0"/>
                <Button x:Name="RestoreBackupButton" 
                        Text="{x:Static resources:AppResources.Settings_RestoreLocalBackup_Button}" 
                        Command="{Binding RestoreBackupCommand}"
                        Grid.Column="1"/>
            </Grid>
            
        </StackLayout>
    </ContentPage.Content>
</ContentPage>